name: Staging to Main Deployment

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          sudo pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build

    outputs:
      tests_passed: ${{ steps.test_result.outputs.tests_passed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          sudo pip install -r requirements.txt

      - name: Run tests
        id: test_result
        run: |
          # Execute your testing scripts, assuming pytest is used
          pytest test_app.py
          echo "::set-output name=tests_passed::true"  # Set the output if tests pass
        continue-on-error: true  # Continue even if tests fail

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging' && needs.test.outputs.tests_passed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH and deploy to Main branch
        uses: actions/ssh-script@v7
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          port: ${{ secrets.PORT }}
          script: |
            cd /path/to/staging/repository  # Replace with the correct path
            git fetch
            git checkout -b main origin/staging
            # Additional deployment steps if needed
