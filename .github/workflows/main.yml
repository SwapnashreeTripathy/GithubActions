name: Python CI/CD Workflow

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Change to your Python version

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Replace with your requirements file

      - name: Run Tests
        run: |
          pytest test_app.py  # Replace with your test file name

      - name: Build
        if: success()
        run: |
          # Any build steps needed before deployment

  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Deploy to Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}  # Replace with your staging server IP
          username: ${{ secrets.EC2_USERNAME }}  # Replace with your SSH username
          key: ${{ secrets.EC2_SSH_KEY }}  # Replace with your SSH private key
          script: |
            # Commands to deploy to staging server
            ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "cd /home/ubuntu && git pull origin staging && sudo systemctl restart jenkins"

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'

    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}  # Replace with your production server IP
          username: ${{ secrets.EC2_USERNAME }}  # Replace with your SSH username
          key: ${{ secrets.EC2_SSH_KEY }}  # Replace with your SSH private key
          script: |
            # Commands to deploy to production server
            ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "cd /home/ubuntu && git pull origin main && sudo systemctl restart jenkins"

# on:
#   push:
#     branches:
#       - staging

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Install dependencies
#         run: |
#           sudo apt update
#           sudo apt install -y python3-pip
#           sudo pip install -r requirements.txt

#   test:
#     runs-on: ubuntu-latest
#     needs: build

#     outputs:
#       tests_passed: ${{ steps.test_result.outputs.tests_passed }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Install dependencies
#         run: |
#           sudo apt update
#           sudo apt install -y python3-pip
#           sudo pip install -r requirements.txt

#       - name: Run tests
#         id: test_result
#         run: |
#           # Execute your testing scripts, assuming pytest is used
#           pytest test_app.py
#           echo "::set-output name=tests_passed::true"  # Set the output if tests pass
#         continue-on-error: true  # Continue even if tests fail

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test
#     if: github.event_name == 'push' && github.ref == 'refs/heads/staging' && needs.test.outputs.tests_passed == 'true'

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Upload SSH private key
#       uses: actions/upload-artifact@v3
#       with:
#         name: ssh-private-key
#         path: ${{ secrets.EC2_SSH_KEY }}

#     - name: Check SSH private key
#       run: |
#         cat ~/.ssh/id_rsa

#     - name: Change SSH private key permissions
#       run: |
#         chmod 600 ~/.ssh/id_rsa
#         echo "Exit code: $?"
